// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: core/command.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Flag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Shorthand     string                 `protobuf:"bytes,2,opt,name=shorthand,proto3" json:"shorthand,omitempty"`
	Usage         string                 `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	DefValue      string                 `protobuf:"bytes,4,opt,name=def_value,json=defValue,proto3" json:"def_value,omitempty"`
	Changed       bool                   `protobuf:"varint,5,opt,name=changed,proto3" json:"changed,omitempty"`
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"` // Supported types: "bool", "int", "int32", "int64",
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flag) Reset() {
	*x = Flag{}
	mi := &file_core_command_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag) ProtoMessage() {}

func (x *Flag) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag.ProtoReflect.Descriptor instead.
func (*Flag) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{0}
}

func (x *Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Flag) GetShorthand() string {
	if x != nil {
		return x.Shorthand
	}
	return ""
}

func (x *Flag) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *Flag) GetDefValue() string {
	if x != nil {
		return x.DefValue
	}
	return ""
}

func (x *Flag) GetChanged() bool {
	if x != nil {
		return x.Changed
	}
	return false
}

func (x *Flag) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type FParseErrWhitelist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnknownFlags  bool                   `protobuf:"varint,1,opt,name=unknown_flags,json=unknownFlags,proto3" json:"unknown_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FParseErrWhitelist) Reset() {
	*x = FParseErrWhitelist{}
	mi := &file_core_command_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FParseErrWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FParseErrWhitelist) ProtoMessage() {}

func (x *FParseErrWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FParseErrWhitelist.ProtoReflect.Descriptor instead.
func (*FParseErrWhitelist) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{1}
}

func (x *FParseErrWhitelist) GetUnknownFlags() bool {
	if x != nil {
		return x.UnknownFlags
	}
	return false
}

type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Basic command fields
	Use                    string            `protobuf:"bytes,1,opt,name=use,proto3" json:"use,omitempty"`
	Short                  string            `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	Long                   string            `protobuf:"bytes,3,opt,name=long,proto3" json:"long,omitempty"`
	Example                string            `protobuf:"bytes,4,opt,name=example,proto3" json:"example,omitempty"`
	ValidArgs              []string          `protobuf:"bytes,5,rep,name=valid_args,json=validArgs,proto3" json:"valid_args,omitempty"`
	ValidArgsFunction      bool              `protobuf:"varint,6,opt,name=valid_args_function,json=validArgsFunction,proto3" json:"valid_args_function,omitempty"`
	Args                   bool              `protobuf:"varint,7,opt,name=args,proto3" json:"args,omitempty"`
	ArgAliases             []string          `protobuf:"bytes,8,rep,name=arg_aliases,json=argAliases,proto3" json:"arg_aliases,omitempty"`
	BashCompletionFunction string            `protobuf:"bytes,9,opt,name=bash_completion_function,json=bashCompletionFunction,proto3" json:"bash_completion_function,omitempty"`
	Deprecated             string            `protobuf:"bytes,10,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	Hidden                 bool              `protobuf:"varint,11,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Annotations            map[string]string `protobuf:"bytes,12,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Version                string            `protobuf:"bytes,13,opt,name=version,proto3" json:"version,omitempty"`
	// Flags
	PersistentFlagSet bool    `protobuf:"varint,14,opt,name=persistent_flag_set,json=persistentFlagSet,proto3" json:"persistent_flag_set,omitempty"`
	LocalFlagSet      bool    `protobuf:"varint,15,opt,name=local_flag_set,json=localFlagSet,proto3" json:"local_flag_set,omitempty"`
	Flags             []*Flag `protobuf:"bytes,16,rep,name=flags,proto3" json:"flags,omitempty"`
	PersistentFlags   []*Flag `protobuf:"bytes,17,rep,name=persistent_flags,json=persistentFlags,proto3" json:"persistent_flags,omitempty"`
	// Execution functions
	RunFunction               bool `protobuf:"varint,18,opt,name=run_function,json=runFunction,proto3" json:"run_function,omitempty"`
	PreRunFunction            bool `protobuf:"varint,19,opt,name=pre_run_function,json=preRunFunction,proto3" json:"pre_run_function,omitempty"`
	PostRunFunction           bool `protobuf:"varint,20,opt,name=post_run_function,json=postRunFunction,proto3" json:"post_run_function,omitempty"`
	PersistentPreRunFunction  bool `protobuf:"varint,21,opt,name=persistent_pre_run_function,json=persistentPreRunFunction,proto3" json:"persistent_pre_run_function,omitempty"`
	PersistentPostRunFunction bool `protobuf:"varint,22,opt,name=persistent_post_run_function,json=persistentPostRunFunction,proto3" json:"persistent_post_run_function,omitempty"`
	// Additional parameters
	Aliases            []string            `protobuf:"bytes,23,rep,name=aliases,proto3" json:"aliases,omitempty"`
	SilenceErrors      bool                `protobuf:"varint,24,opt,name=silence_errors,json=silenceErrors,proto3" json:"silence_errors,omitempty"`
	SilenceUsage       bool                `protobuf:"varint,25,opt,name=silence_usage,json=silenceUsage,proto3" json:"silence_usage,omitempty"`
	TraverseChildren   bool                `protobuf:"varint,26,opt,name=traverse_children,json=traverseChildren,proto3" json:"traverse_children,omitempty"`
	FparseErrWhitelist *FParseErrWhitelist `protobuf:"bytes,27,opt,name=fparse_err_whitelist,json=fparseErrWhitelist,proto3" json:"fparse_err_whitelist,omitempty"`
	// Subcommands
	Commands      []*Command `protobuf:"bytes,28,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_core_command_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{2}
}

func (x *Command) GetUse() string {
	if x != nil {
		return x.Use
	}
	return ""
}

func (x *Command) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *Command) GetLong() string {
	if x != nil {
		return x.Long
	}
	return ""
}

func (x *Command) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *Command) GetValidArgs() []string {
	if x != nil {
		return x.ValidArgs
	}
	return nil
}

func (x *Command) GetValidArgsFunction() bool {
	if x != nil {
		return x.ValidArgsFunction
	}
	return false
}

func (x *Command) GetArgs() bool {
	if x != nil {
		return x.Args
	}
	return false
}

func (x *Command) GetArgAliases() []string {
	if x != nil {
		return x.ArgAliases
	}
	return nil
}

func (x *Command) GetBashCompletionFunction() string {
	if x != nil {
		return x.BashCompletionFunction
	}
	return ""
}

func (x *Command) GetDeprecated() string {
	if x != nil {
		return x.Deprecated
	}
	return ""
}

func (x *Command) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Command) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Command) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Command) GetPersistentFlagSet() bool {
	if x != nil {
		return x.PersistentFlagSet
	}
	return false
}

func (x *Command) GetLocalFlagSet() bool {
	if x != nil {
		return x.LocalFlagSet
	}
	return false
}

func (x *Command) GetFlags() []*Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command) GetPersistentFlags() []*Flag {
	if x != nil {
		return x.PersistentFlags
	}
	return nil
}

func (x *Command) GetRunFunction() bool {
	if x != nil {
		return x.RunFunction
	}
	return false
}

func (x *Command) GetPreRunFunction() bool {
	if x != nil {
		return x.PreRunFunction
	}
	return false
}

func (x *Command) GetPostRunFunction() bool {
	if x != nil {
		return x.PostRunFunction
	}
	return false
}

func (x *Command) GetPersistentPreRunFunction() bool {
	if x != nil {
		return x.PersistentPreRunFunction
	}
	return false
}

func (x *Command) GetPersistentPostRunFunction() bool {
	if x != nil {
		return x.PersistentPostRunFunction
	}
	return false
}

func (x *Command) GetAliases() []string {
	if x != nil {
		return x.Aliases
	}
	return nil
}

func (x *Command) GetSilenceErrors() bool {
	if x != nil {
		return x.SilenceErrors
	}
	return false
}

func (x *Command) GetSilenceUsage() bool {
	if x != nil {
		return x.SilenceUsage
	}
	return false
}

func (x *Command) GetTraverseChildren() bool {
	if x != nil {
		return x.TraverseChildren
	}
	return false
}

func (x *Command) GetFparseErrWhitelist() *FParseErrWhitelist {
	if x != nil {
		return x.FparseErrWhitelist
	}
	return nil
}

func (x *Command) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type CommandsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*Command             `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandsResponse) Reset() {
	*x = CommandsResponse{}
	mi := &file_core_command_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandsResponse) ProtoMessage() {}

func (x *CommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandsResponse.ProtoReflect.Descriptor instead.
func (*CommandsResponse) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{3}
}

func (x *CommandsResponse) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_core_command_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{4}
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        map[string]string      `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_core_command_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{5}
}

func (x *Config) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

type NameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	mi := &file_core_command_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{6}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_core_command_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{7}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Flags         map[string]string      `protobuf:"bytes,3,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_core_command_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_core_command_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_core_command_proto_rawDescGZIP(), []int{8}
}

func (x *CommandRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CommandRequest) GetFlags() map[string]string {
	if x != nil {
		return x.Flags
	}
	return nil
}

var File_core_command_proto protoreflect.FileDescriptor

const file_core_command_proto_rawDesc = "" +
	"\n" +
	"\x12core/command.proto\x12\x04core\"\x99\x01\n" +
	"\x04Flag\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tshorthand\x18\x02 \x01(\tR\tshorthand\x12\x14\n" +
	"\x05usage\x18\x03 \x01(\tR\x05usage\x12\x1b\n" +
	"\tdef_value\x18\x04 \x01(\tR\bdefValue\x12\x18\n" +
	"\achanged\x18\x05 \x01(\bR\achanged\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\"9\n" +
	"\x12FParseErrWhitelist\x12#\n" +
	"\runknown_flags\x18\x01 \x01(\bR\funknownFlags\"\xa3\t\n" +
	"\aCommand\x12\x10\n" +
	"\x03use\x18\x01 \x01(\tR\x03use\x12\x14\n" +
	"\x05short\x18\x02 \x01(\tR\x05short\x12\x12\n" +
	"\x04long\x18\x03 \x01(\tR\x04long\x12\x18\n" +
	"\aexample\x18\x04 \x01(\tR\aexample\x12\x1d\n" +
	"\n" +
	"valid_args\x18\x05 \x03(\tR\tvalidArgs\x12.\n" +
	"\x13valid_args_function\x18\x06 \x01(\bR\x11validArgsFunction\x12\x12\n" +
	"\x04args\x18\a \x01(\bR\x04args\x12\x1f\n" +
	"\varg_aliases\x18\b \x03(\tR\n" +
	"argAliases\x128\n" +
	"\x18bash_completion_function\x18\t \x01(\tR\x16bashCompletionFunction\x12\x1e\n" +
	"\n" +
	"deprecated\x18\n" +
	" \x01(\tR\n" +
	"deprecated\x12\x16\n" +
	"\x06hidden\x18\v \x01(\bR\x06hidden\x12@\n" +
	"\vannotations\x18\f \x03(\v2\x1e.core.Command.AnnotationsEntryR\vannotations\x12\x18\n" +
	"\aversion\x18\r \x01(\tR\aversion\x12.\n" +
	"\x13persistent_flag_set\x18\x0e \x01(\bR\x11persistentFlagSet\x12$\n" +
	"\x0elocal_flag_set\x18\x0f \x01(\bR\flocalFlagSet\x12 \n" +
	"\x05flags\x18\x10 \x03(\v2\n" +
	".core.FlagR\x05flags\x125\n" +
	"\x10persistent_flags\x18\x11 \x03(\v2\n" +
	".core.FlagR\x0fpersistentFlags\x12!\n" +
	"\frun_function\x18\x12 \x01(\bR\vrunFunction\x12(\n" +
	"\x10pre_run_function\x18\x13 \x01(\bR\x0epreRunFunction\x12*\n" +
	"\x11post_run_function\x18\x14 \x01(\bR\x0fpostRunFunction\x12=\n" +
	"\x1bpersistent_pre_run_function\x18\x15 \x01(\bR\x18persistentPreRunFunction\x12?\n" +
	"\x1cpersistent_post_run_function\x18\x16 \x01(\bR\x19persistentPostRunFunction\x12\x18\n" +
	"\aaliases\x18\x17 \x03(\tR\aaliases\x12%\n" +
	"\x0esilence_errors\x18\x18 \x01(\bR\rsilenceErrors\x12#\n" +
	"\rsilence_usage\x18\x19 \x01(\bR\fsilenceUsage\x12+\n" +
	"\x11traverse_children\x18\x1a \x01(\bR\x10traverseChildren\x12J\n" +
	"\x14fparse_err_whitelist\x18\x1b \x01(\v2\x18.core.FParseErrWhitelistR\x12fparseErrWhitelist\x12)\n" +
	"\bcommands\x18\x1c \x03(\v2\r.core.CommandR\bcommands\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"=\n" +
	"\x10CommandsResponse\x12)\n" +
	"\bcommands\x18\x01 \x03(\v2\r.core.CommandR\bcommands\"\a\n" +
	"\x05Empty\"u\n" +
	"\x06Config\x120\n" +
	"\x06values\x18\x01 \x03(\v2\x18.core.Config.ValuesEntryR\x06values\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\"\n" +
	"\fNameResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"+\n" +
	"\x0fVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\xa9\x01\n" +
	"\x0eCommandRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04args\x18\x02 \x03(\tR\x04args\x125\n" +
	"\x05flags\x18\x03 \x03(\v2\x1f.core.CommandRequest.FlagsEntryR\x05flags\x1a8\n" +
	"\n" +
	"FlagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xd5\x03\n" +
	"\rCommandModule\x122\n" +
	"\vGetCommands\x12\v.core.Empty\x1a\x16.core.CommandsResponse\x12/\n" +
	"\n" +
	"RunCommand\x12\x14.core.CommandRequest\x1a\v.core.Empty\x122\n" +
	"\rPreRunCommand\x12\x14.core.CommandRequest\x1a\v.core.Empty\x123\n" +
	"\x0ePostRunCommand\x12\x14.core.CommandRequest\x1a\v.core.Empty\x12<\n" +
	"\x17PersistentPreRunCommand\x12\x14.core.CommandRequest\x1a\v.core.Empty\x12=\n" +
	"\x18PersistentPostRunCommand\x12\x14.core.CommandRequest\x1a\v.core.Empty\x12!\n" +
	"\x04Init\x12\f.core.Config\x1a\v.core.Empty\x12'\n" +
	"\x04Name\x12\v.core.Empty\x1a\x12.core.NameResponse\x12-\n" +
	"\aVersion\x12\v.core.Empty\x1a\x15.core.VersionResponseB'Z%github.com/makisq/PACAL/octochan/coreb\x06proto3"

var (
	file_core_command_proto_rawDescOnce sync.Once
	file_core_command_proto_rawDescData []byte
)

func file_core_command_proto_rawDescGZIP() []byte {
	file_core_command_proto_rawDescOnce.Do(func() {
		file_core_command_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_core_command_proto_rawDesc), len(file_core_command_proto_rawDesc)))
	})
	return file_core_command_proto_rawDescData
}

var file_core_command_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_core_command_proto_goTypes = []any{
	(*Flag)(nil),               // 0: core.Flag
	(*FParseErrWhitelist)(nil), // 1: core.FParseErrWhitelist
	(*Command)(nil),            // 2: core.Command
	(*CommandsResponse)(nil),   // 3: core.CommandsResponse
	(*Empty)(nil),              // 4: core.Empty
	(*Config)(nil),             // 5: core.Config
	(*NameResponse)(nil),       // 6: core.NameResponse
	(*VersionResponse)(nil),    // 7: core.VersionResponse
	(*CommandRequest)(nil),     // 8: core.CommandRequest
	nil,                        // 9: core.Command.AnnotationsEntry
	nil,                        // 10: core.Config.ValuesEntry
	nil,                        // 11: core.CommandRequest.FlagsEntry
}
var file_core_command_proto_depIdxs = []int32{
	9,  // 0: core.Command.annotations:type_name -> core.Command.AnnotationsEntry
	0,  // 1: core.Command.flags:type_name -> core.Flag
	0,  // 2: core.Command.persistent_flags:type_name -> core.Flag
	1,  // 3: core.Command.fparse_err_whitelist:type_name -> core.FParseErrWhitelist
	2,  // 4: core.Command.commands:type_name -> core.Command
	2,  // 5: core.CommandsResponse.commands:type_name -> core.Command
	10, // 6: core.Config.values:type_name -> core.Config.ValuesEntry
	11, // 7: core.CommandRequest.flags:type_name -> core.CommandRequest.FlagsEntry
	4,  // 8: core.CommandModule.GetCommands:input_type -> core.Empty
	8,  // 9: core.CommandModule.RunCommand:input_type -> core.CommandRequest
	8,  // 10: core.CommandModule.PreRunCommand:input_type -> core.CommandRequest
	8,  // 11: core.CommandModule.PostRunCommand:input_type -> core.CommandRequest
	8,  // 12: core.CommandModule.PersistentPreRunCommand:input_type -> core.CommandRequest
	8,  // 13: core.CommandModule.PersistentPostRunCommand:input_type -> core.CommandRequest
	5,  // 14: core.CommandModule.Init:input_type -> core.Config
	4,  // 15: core.CommandModule.Name:input_type -> core.Empty
	4,  // 16: core.CommandModule.Version:input_type -> core.Empty
	3,  // 17: core.CommandModule.GetCommands:output_type -> core.CommandsResponse
	4,  // 18: core.CommandModule.RunCommand:output_type -> core.Empty
	4,  // 19: core.CommandModule.PreRunCommand:output_type -> core.Empty
	4,  // 20: core.CommandModule.PostRunCommand:output_type -> core.Empty
	4,  // 21: core.CommandModule.PersistentPreRunCommand:output_type -> core.Empty
	4,  // 22: core.CommandModule.PersistentPostRunCommand:output_type -> core.Empty
	4,  // 23: core.CommandModule.Init:output_type -> core.Empty
	6,  // 24: core.CommandModule.Name:output_type -> core.NameResponse
	7,  // 25: core.CommandModule.Version:output_type -> core.VersionResponse
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_core_command_proto_init() }
func file_core_command_proto_init() {
	if File_core_command_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_core_command_proto_rawDesc), len(file_core_command_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_core_command_proto_goTypes,
		DependencyIndexes: file_core_command_proto_depIdxs,
		MessageInfos:      file_core_command_proto_msgTypes,
	}.Build()
	File_core_command_proto = out.File
	file_core_command_proto_goTypes = nil
	file_core_command_proto_depIdxs = nil
}
